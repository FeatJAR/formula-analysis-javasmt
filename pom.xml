<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.spldev</groupId>
		<artifactId>spldev</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<artifactId>formula-analysis-javasmt</artifactId>
	<packaging>jar</packaging>

	<name>Formula-Analysis-JavaSMT Lib</name>
	<description></description>
	<url>https://github.com/skrieter/formula-analysis-javasmt</url>

	<properties>
		<project.dependency.relativepath>dependency</project.dependency.relativepath>
		<project.dependency.path>${project.build.directory}/${project.dependency.relativepath}</project.dependency.path>
	</properties>

	<profiles>
		<profile>
			<id>os-unix</id>
			<activation>
				<os>
					<family>Unix</family>
				</os>
			</activation>
			<properties>
				<lib.type>so</lib.type>
			</properties>
		</profile>
		<profile>
			<id>os-windows</id>
			<activation>
				<os>
					<family>Windows</family>
				</os>
			</activation>
			<properties>
				<lib.type>dll</lib.type>
			</properties>
		</profile>
		<profile>
			<id>os-mac</id>
			<activation>
				<os>
					<family>Mac</family>
				</os>
			</activation>
			<properties>
				<lib.type>dylib</lib.type>
			</properties>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>org.spldev</groupId>
			<artifactId>util</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.spldev</groupId>
			<artifactId>formula</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.spldev</groupId>
			<artifactId>formula-analysis</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.sosy-lab</groupId>
			<artifactId>java-smt</artifactId>
			<version>3.9.0-1-g304079c2</version>
		</dependency>

		<!-- MathSAT5 has one dependency (on Linux) -->
		<dependency>
			<groupId>org.sosy-lab</groupId>
			<artifactId>javasmt-solver-mathsat5</artifactId>
			<version>5.6.6</version>
			<classifier>libmathsat5j</classifier>
			<type>${lib.type}</type>
		</dependency>

		<!-- Z3 has three dependencies (on Linux) -->
		<dependency>
			<groupId>org.sosy-lab</groupId>
			<artifactId>javasmt-solver-z3</artifactId>
			<version>4.8.10</version>
			<type>jar</type>
			<classifier>com.microsoft.z3</classifier>
		</dependency>
		<dependency>
			<groupId>org.sosy-lab</groupId>
			<artifactId>javasmt-solver-z3</artifactId>
			<version>4.8.10</version>
			<type>${lib.type}</type>
			<classifier>libz3</classifier>
		</dependency>
		<dependency>
			<groupId>org.sosy-lab</groupId>
			<artifactId>javasmt-solver-z3</artifactId>
			<version>4.8.10</version>
			<type>${lib.type}</type>
			<classifier>libz3java</classifier>
		</dependency>

		<!-- Boolector has three dependencies (on Linux) -->
		<dependency>
			<groupId>org.sosy-lab</groupId>
			<artifactId>javasmt-solver-boolector</artifactId>
			<version>3.2.1-30-g95859db8</version>
			<type>${lib.type}</type>
			<classifier>libboolector</classifier>
		</dependency>
		<dependency>
			<groupId>org.sosy-lab</groupId>
			<artifactId>javasmt-solver-boolector</artifactId>
			<version>3.2.1-30-g95859db8</version>
			<type>${lib.type}</type>
			<classifier>libminisat</classifier>
		</dependency>
		<dependency>
			<groupId>org.sosy-lab</groupId>
			<artifactId>javasmt-solver-boolector</artifactId>
			<version>3.2.1-30-g95859db8</version>
			<type>${lib.type}</type>
			<classifier>libpicosat</classifier>
		</dependency>

		<!-- CVC4 has four dependencies (on Linux) -->
		<dependency>
			<groupId>org.sosy-lab</groupId>
			<artifactId>javasmt-solver-cvc4</artifactId>
			<version>1.8-prerelease-2020-06-24-g7825d8f28</version>
			<type>jar</type>
			<classifier>CVC4</classifier>
		</dependency>
		<dependency>
			<groupId>org.sosy-lab</groupId>
			<artifactId>javasmt-solver-cvc4</artifactId>
			<version>1.8-prerelease-2020-06-24-g7825d8f28</version>
			<type>${lib.type}</type>
			<classifier>libcvc4</classifier>
		</dependency>
		<dependency>
			<groupId>org.sosy-lab</groupId>
			<artifactId>javasmt-solver-cvc4</artifactId>
			<version>1.8-prerelease-2020-06-24-g7825d8f28</version>
			<type>${lib.type}</type>
			<classifier>libcvc4jni</classifier>
		</dependency>
		<dependency>
			<groupId>org.sosy-lab</groupId>
			<artifactId>javasmt-solver-cvc4</artifactId>
			<version>1.8-prerelease-2020-06-24-g7825d8f28</version>
			<type>${lib.type}</type>
			<classifier>libcvc4parser</classifier>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<!-- This step starts its own JVM that ignores system properties set by the user, because why would those ever be important?! -->
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.1</version>
					<configuration>
						<!-- For solvers with native binaries, you need to add the classpath to test properly. This path needs to be the location of the sosy-lab.commons.jar and the 
							solver binaries. See maven-dependency-plugin below for more information. -->
						<argLine>-Djava.library.path=${project.dependency.path}</argLine>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.0.2</version>
					<configuration>
						<archive>
							<manifest>
								<!-- For solvers with native binaries, you need to add the classpath to test properly. This path needs to be the location of the sosy-lab.commons.jar and 
									the solver binaries. See maven-dependency-plugin below for more information. -->
								<addClasspath>true</addClasspath>
								<classpathPrefix>${project.dependency.relativepath}</classpathPrefix>
							</manifest>
						</archive>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<!-- The dependency plugin allows us to copy or delete files. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<!-- The goal "copy" is used to change the name of the solver libraries (i.e. Z3) from the name that is used internally in Maven to the normal name. -->
						<id>copy</id>
						<phase>initialize</phase>
						<goals>
							<goal>copy</goal>
						</goals>
					</execution>
					<execution>
						<!-- This copies all dependencies to ${project.dependency.path}. -->
						<!-- We do this, because the sosy-lab.commons dependency (in JavaSMT) searches the native solver binaries (i.e. MathSAT or Z3) at specific locations and with 
							specific names. So we just copy the dependencies and set the classpath to this location. You may of course change this if you know how to. Default search locations 
							for sosy-lab.commons: (1) in its own folder (by far the easiest, just copy everything together) or (2) in the "native library path" as returned by getNativeLibraryPath() 
							in Java, which is the directory ../native/<arch>-<os>/ relative to the JAR file of sosy-lab.commons, with the following values depending on your system (arch=x86_64|x86; 
							os=linux|windows|macosx). -->
						<id>copy-dependencies</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<outputDirectory>${project.dependency.path}</outputDirectory>

					<artifactItems>
						<!-- Here we specify what we want to use for the goal "copy". In our case we copy the solver dependencies (binaries) to change their names. groupId/artifactId/version/type/classifier 
							have to match the dependency! We copy them to ${project.dependency.path} as this is the location that copy-dependencies uses by default. destFileName specifies the 
							final name. You may only need some of the artifacts below, depending on what solver(s) you want. Important: you NEED to set the classpath to ${project.dependency.path} 
							or wherever you have your sosy-lab.commons + solver binaries! -->

						<!-- MathSAT5 has one native library -->
						<artifactItem>
							<groupId>org.sosy-lab</groupId>
							<artifactId>javasmt-solver-mathsat5</artifactId>
							<type>${lib.type}</type>
							<classifier>libmathsat5j</classifier>
							<destFileName>libmathsat5j.${lib.type}</destFileName>
						</artifactItem>

						<!-- Z3 has two native libraries -->
						<artifactItem>
							<groupId>org.sosy-lab</groupId>
							<artifactId>javasmt-solver-z3</artifactId>
							<type>${lib.type}</type>
							<classifier>libz3java</classifier>
							<destFileName>libz3java.${lib.type}</destFileName>
						</artifactItem>
						<artifactItem>
							<groupId>org.sosy-lab</groupId>
							<artifactId>javasmt-solver-z3</artifactId>
							<type>${lib.type}</type>
							<classifier>libz3</classifier>
							<destFileName>libz3.${lib.type}</destFileName>
						</artifactItem>

						<!-- Boolector has three dependencies (on Linux) -->
						<artifactItem>
							<groupId>org.sosy-lab</groupId>
							<artifactId>javasmt-solver-boolector</artifactId>
							<type>${lib.type}</type>
							<classifier>libboolector</classifier>
							<destFileName>libboolector.${lib.type}</destFileName>
						</artifactItem>
						<artifactItem>
							<groupId>org.sosy-lab</groupId>
							<artifactId>javasmt-solver-boolector</artifactId>
							<type>${lib.type}</type>
							<classifier>libminisat</classifier>
							<destFileName>libminisat.${lib.type}</destFileName>
						</artifactItem>
						<artifactItem>
							<groupId>org.sosy-lab</groupId>
							<artifactId>javasmt-solver-boolector</artifactId>
							<type>${lib.type}</type>
							<classifier>libpicosat</classifier>
							<destFileName>libpicosat.${lib.type}</destFileName>
						</artifactItem>

						<!-- CVC4 has four dependencies (on Linux), and renaming the JAR file is not required -->
						<artifactItem>
							<groupId>org.sosy-lab</groupId>
							<artifactId>javasmt-solver-cvc4</artifactId>
							<type>${lib.type}</type>
							<classifier>libcvc4</classifier>
							<destFileName>libcvc4.${lib.type}</destFileName>
						</artifactItem>
						<artifactItem>
							<groupId>org.sosy-lab</groupId>
							<artifactId>javasmt-solver-cvc4</artifactId>
							<type>${lib.type}</type>
							<classifier>libcvc4jni</classifier>
							<destFileName>libcvc4jni.${lib.type}</destFileName>
						</artifactItem>
						<artifactItem>
							<groupId>org.sosy-lab</groupId>
							<artifactId>javasmt-solver-cvc4</artifactId>
							<type>${lib.type}</type>
							<classifier>libcvc4parser</classifier>
							<destFileName>libcvc4parser.${lib.type}</destFileName>
						</artifactItem>

					</artifactItems>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.4</version>
				<executions>
					<execution>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-help-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>show-profiles</id>
						<phase>compile</phase>
						<goals>
							<goal>active-profiles</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
